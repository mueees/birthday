Мониторинг работоспособности и простое наргрузочное тестирование, оно же профилирование.
Было бы неплохо не зависить от Mongo, и заюзать для базы что то статическое.

User flow
---------------

Необходима возможность просто создать запрос. 
И проверить респонс, с полной инфрмацией о респонсе.
https://www.runscope.com/new/g9rvo11bzpl8?mid=0e6b3ba7-81f5-41f4-b841-f48de55dc0e2

Далее все эти запросы отображаются в списке "All Trafic"
Любой запрос из списка All trafic можно перетянуть в коллекцию запросов.
Далее всю коллекцию можно обновить, будет удобно когда надо будет отлаживать запросы.
Иметь возможность отметить несколько запросов, и показывать сравнение результатов.
Иметь возможность расшарить запрос по прямой ссылке.
Иметь возможность добавить запрос в коллекцию тестирования или в другую коллекцию запросов.

Любой запрос из списка All trafic можно перетянуть в коллекцию тестов.
Для каждой коллекции возможно настроить расписание запуска.
Что делать если какой то урл зафейлился, какие урлы дергать, куда письма отправлять.
Детальный отчет о запросах.
Добавление к каждому запроса в коллекции  Assertions ( условий выполнения ).

Дизайн будет скопирован с https://www.runscope.com

1. Мониторинг.
Будет два типа мониторинга.

- создания монитора через админку, будет включать такие поля
  - type: ['http', 'https']
  - Friendly name
  - url
  - Monitoring interval
  - Time Limit
  - Ketword (exist / not exist)

  Мониторы этого типа можно выключать и включать через админку.

- создание монитора через конфигурационные файлы
  - определенна сама проверка
  - частота запуска проверки
  - название проверки
  - автоматически ли запускать проверку
  - disable/enable проверки
  - возможность запускать нагрузочное тестирование для проверки

  Каждый раз, перед запуском всего приложений, nodejs будет проходиться по папке и собирать там все конфигурационные файлы, и подгружать их к себе в память.
  В конфигурационом файле будет определенна проверка работоспособности url, или какого-либо другого сервиса, и название этой проверки. Далее по web запросу, будет отдаваться список всех этих конфигурационных файлов в отдельном зоне.

  Конфигурационные мониторы включать и выключать можно через админку.

  Так же можно прописать в файлах конфаигруции, какие мониторы запускаются автоматически.

2. Нагрузочное тестирование

 Для любой из проверок (Мониторинг через админку или через конфигурационные файлы ) возможность проведения нагрузочного тестирования.

 Входные параметры:
  - кол-во времени проверки  ( период запросов 1 секунда )
  - кол-во одновременных запросов
  - в итоге график, зависимости каждого периода времени и кол-ва запросов

 Метрики:
  - отношение кол-ва одновременных запросов к времени отклика

 В итоге для каждого тестирования можно задать имя, и сохранить результаты, которые будут доступны по прямой ссылке.

 Результаты тестирования желательно показывать сразу по мере проведения тестирования.
 Добавить возможность прервать тестирование.

 В одно время, возможно проводить не более 5 тестов.

